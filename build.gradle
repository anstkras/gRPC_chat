plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.7'
    id 'com.google.protobuf' version '0.8.8'
}

repositories {
    mavenCentral()
    mavenLocal()
}

def grpcVersion = '1.28.1'
def protobufVersion = '3.11.0'
def protocVersion = protobufVersion


javafx {
    version = "12"
    modules = [ 'javafx.controls' ]
}

dependencies {
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    compileOnly "javax.annotation:javax.annotation-api:1.2"

    implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"

    runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}"
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }

}

task clientJar(dependsOn: classes, type: Jar) {
    archiveBaseName = "MyClientUI"
    from { configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar

    manifest {
        attributes("Main-Class": "fr.ladybug.team.MyClientUI")
    }
}

task serverJar(dependsOn: classes, type: Jar) {
    archiveBaseName = "MyServer"
    from { configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar

    manifest {
        attributes("Main-Class": "fr.ladybug.team.MyServer")
    }
}

mainClassName = "fr.ladybug.team.client.MyClientUI"

build {
    dependsOn clientJar
    dependsOn serverJar
}
